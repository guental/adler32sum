#!/usr/bin/env python2.7
import sys
import os
import zlib

app_name = "adler32sum"
sys.tracebacklimit = 0
blocksize = 1024 * 1024
exit_code = 0
arg_parse = 1
arg_stdin = 0

def adler32_calc(filename, maxsize):
	with open(filename, 'rb') as openfile:
		while True:
			data = openfile.read(maxsize)
			if not data:
				break
			adler32 = zlib.adler32(data)
	return adler32

if __name__ == '__main__':
	if len(sys.argv) < 2:
		arg = "/dev/stdin"
		try:
			with open(arg) as f:
				filepath = arg
		except IOError:
			print >> sys.stderr, app_name + ":", arg + ": Permission denied"
			sys.exit(1)
		adler32_hash = adler32_calc(filepath, blocksize)
		hash = '%08X' % (adler32_hash & 0xffffffff)
		arg = "-"
		print hash.lower(), "", arg
	else:
		for arg in sys.argv[1:]:
			arg_stdin = 0
			if arg_parse == 1:
				if arg in ['--']:
					arg_parse = 0
					if len(sys.argv) == 2:
						arg = "/dev/stdin"
						arg_stdin = 1
					else:
						continue
			if arg in ['-']:
				arg = "/dev/stdin"
				arg_stdin = 1
			if os.path.isdir(arg):
				print >> sys.stderr, app_name + ":", arg + ": Is a directory"
				exit_code = 1
			elif os.path.exists(arg):
				try:
					with open(arg) as f:
						filepath = arg
				except IOError:
					print >> sys.stderr, app_name + ":", arg + ": Permission denied"
					exit_code = 1
					continue
				adler32_hash = adler32_calc(filepath, blocksize)
				hash = '%08X' % (adler32_hash & 0xffffffff)
				if arg_stdin == 1:
					arg = "-"
				print hash.lower(), "", arg
			else:
				print >> sys.stderr, app_name + ":", arg + ": No such file or directory"
				exit_code = 1

sys.exit(exit_code)
